version: 2.1

commands:
  initialize:
    parameters:
      version:
        type: string
        default: latest
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-<< parameters.version >>-{{ .Branch }}-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}-{{ checksum "requirements.dev.txt" }}
            - v1-dependencies-<< parameters.version >>-{{ .Branch }}-
            - v1-dependencies-<< parameters.version >>-

      - run:
          name: Install Python Dependencies
          command: |
            python -m venv venv
            . venv/bin/activate
            make dev

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ .Branch }}-{{ checksum "setup.py" }}-{{ checksum "Makefile" }}-{{ checksum "requirements.dev.txt" }}

  pypirc:
    parameters:
      username:
        type: string
      password:
        type: string
    steps:
      - run:
          name: "Write .pypirc"
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = << parameters.username >>" >> ~/.pypirc
            echo -e "password = << parameters.password >>" >> ~/.pypirc

jobs:
  test:
    parameters:
      version:
        type: string
        default: latest

    docker:
      - image: circleci/python:<< parameters.version >>

    working_directory: ~/repo

    steps:
      - initialize
        version: << parameters.version >>

      - run:
          name: Run Tests
          command: |
            . venv/bin/activate
            make test

      # TODO: Store test artifacts

  deploy:
    parameters:
      username:
        type: string
      password:
        type: string
      version:
        type: string
        default: latest

    docker:
      - image: circleci/python::<< parameters.version >>

    working_directory: ~/repo

    steps:
      - initialize
      - pypirc:
          username: << parameters.username >>
          password: << parameters.password >>
      - run:
          name: Deploy to PyPI
          command: |
            . venv/bin/activate
            make deploy
      - store_artifacts:
          path: dist/

workflows:
  version: 2
  build:
    jobs:
      - test:
          name: "test-python3.4"
          version: "3.4"
      - test:
          name: "test-python3.5"
          version: "3.5"
      - test:
          name: "test-python3.6"
          version: "3.6"
      - test:
          name: "test-python3.7"
          version: "3.7"
      - deploy:
          username: $PYPI_USERNAME
          password: $PYPI_PASSWORD
          requires:
            - test-python3.4
            - test-python3.5
            - test-python3.6
            - test-python3.7
          filters:
            branches:
              only: master
